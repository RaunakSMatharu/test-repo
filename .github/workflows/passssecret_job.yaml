name: KeyVault Secret Update_secret_passJOb

on:
  workflow_dispatch:
    inputs:
      secret_value:
        description: "Enter the secret value"
        required: true
        type: string

jobs:
  mask-secret:
    runs-on: ubuntu-latest
    outputs:
      masked_secret: ${{ steps.set-secret.outputs.secret }}
    steps:
      - name: Mask and set secret
        id: set-secret
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const core = require('@actions/core');
            const evt = JSON.parse(fs.readFileSync(process.env.GITHUB_EVENT_PATH, 'utf8'));
            const secret = evt.inputs.secret_value || '';
            // Mask in logs
            core.setSecret(secret);
            // Expose as step output (becomes job output via `outputs:` above)
            core.setOutput('secret', secret);

  use-secret:
    runs-on: ubuntu-latest
    needs: mask-secret
    steps:
      - name: Check secret length (no secret revealed)
        env:
          SECRET: ${{ needs.mask-secret.outputs.masked_secret }}
        run: |
          if [ -z "$SECRET" ]; then
            echo "Secret is empty"
            exit 1
          fi

          len=${#SECRET}
          echo "Secret length: $len"

          # Optional policy checks — tweak thresholds as needed:
          min_len=8
          max_len=256
          if [ "$len" -lt "$min_len" ]; then
            echo "❌ Secret too short (min $min_len)."
            exit 1
          fi
          if [ "$len" -gt "$max_len" ]; then
            echo "❌ Secret too long (max $max_len)."
            exit 1
          fi

          echo "✅ Secret length is within the allowed range."

